{
  "permissions": {
    "allow": [
      "*",
      "Read(**)",
      "Write(**)",
      "Edit(**)",
      "Glob(**)",
      "Grep(**)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git branch:*)",
      "Bash(git show:*)",
      "Bash(git remote:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git stash:*)",
      "Bash(git tag:*)",
      "Bash(git blame:*)",
      "Bash(git rev-parse:*)",
      "Bash(git config:*)",
      "Bash(git switch:*)",
      "Bash(git init:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(python -m pytest:*)",
      "Bash(python -m unittest:*)",
      "Bash(pytest:*)",
      "Bash(coverage:*)",
      "Bash(mypy:*)",
      "Bash(black:*)",
      "Bash(flake8:*)",
      "Bash(ruff:*)",
      "Bash(isort:*)",
      "Bash(pip:*)",
      "Bash(pip3:*)",
      "Bash(pipenv:*)",
      "Bash(poetry:*)",
      "Bash(conda:*)",
      "Bash(pre-commit:*)",
      "Bash(tox:*)",
      "Bash(cmake:*)",
      "Bash(make:*)",
      "Bash(g++:*)",
      "Bash(gcc:*)",
      "Bash(clang:*)",
      "Bash(clang++:*)",
      "Bash(xcodebuild:*)",
      "Bash(swift:*)",
      "Bash(swiftc:*)",
      "Bash(swift build)",
      "Bash(swift package:*)",
      "Bash(npm:*)",
      "Bash(node:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(npx:*)",
      "Bash(tsc:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(cargo:*)",
      "Bash(rustc:*)",
      "Bash(go:*)",
      "Bash(javac:*)",
      "Bash(java:*)",
      "Bash(mvn:*)",
      "Bash(gradle:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(kubectl:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(less:*)",
      "Bash(more:*)",
      "Bash(ls:*)",
      "Bash(pwd:*)",
      "Bash(cd:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(whoami:*)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(env:*)",
      "Bash(printenv:*)",
      "Bash(date:*)",
      "Bash(cal:*)",
      "Bash(uptime:*)",
      "Bash(uname:*)",
      "Bash(sw_vers:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(egrep:*)",
      "Bash(fgrep:*)",
      "Bash(rg:*)",
      "Bash(ag:*)",
      "Bash(ack:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(cut:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(wc:*)",
      "Bash(diff:*)",
      "Bash(patch:*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(tree:*)",
      "Bash(tar:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(ping:*)",
      "Bash(netstat:*)",
      "Bash(lsof:*)",
      "Bash(ps:*)",
      "Bash(top:*)",
      "Bash(htop:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(xmllint:*)",
      "Bash(test:*)",
      "Bash(gh pr:*)",
      "Bash(gh issue:*)",
      "Bash(gh repo:*)",
      "Bash(gh auth:*)",
      "Bash(gh run:*)",
      "Bash(gh workflow:*)",
      "Bash(act:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "mcp__ide__getDiagnostics",
      "mcp__ide__executeCode",
      "Bash(/Users/lee.tanenbaumanheuser-busch.com/.config/superpowers/skills/skills/using-skills/find-skills:*)",
      "Bash(/Users/lee.tanenbaumanheuser-busch.com/.config/superpowers/skills/skills/using-skills/skill-run:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.claude.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:python.org)",
      "WebFetch(domain:docs.python.org)",
      "WebFetch(domain:npmjs.com)",
      "WebFetch(domain:www.npmjs.com)",
      "WebFetch(domain:pypi.org)",
      "WebFetch(domain:pytorch.org)",
      "WebFetch(domain:tensorflow.org)",
      "WebFetch(domain:scikit-learn.org)",
      "WebFetch(domain:opencv.org)",
      "WebFetch(domain:numpy.org)",
      "WebFetch(domain:scipy.org)",
      "WebFetch(domain:pandas.pydata.org)",
      "WebFetch(domain:matplotlib.org)",
      "WebFetch(domain:seaborn.pydata.org)",
      "WebFetch(domain:jupyter.org)",
      "WebFetch(domain:developer.apple.com)",
      "WebFetch(domain:swift.org)",
      "WebFetch(domain:cppreference.com)",
      "WebFetch(domain:en.cppreference.com)",
      "WebFetch(domain:cmake.org)",
      "WebFetch(domain:opencv-python-tutroals.readthedocs.io)",
      "WebFetch(domain:pillow.readthedocs.io)",
      "WebFetch(domain:scikit-image.org)",
      "WebFetch(domain:simonwillison.net)",
      "WebFetch(domain:www.anthropic.com)",
      "WebFetch(domain:anthropic.com)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:*.medium.com)",
      "WebFetch(domain:www.datacamp.com)",
      "WebFetch(domain:datacamp.com)"
    ],
    "deny": [
      "Bash(rm -rf /*:*)",
      "Bash(rm -rf /:*)",
      "Bash(sudo rm:*)",
      "Bash(chmod -R 777:*)"
    ],
    "ask": []
  }
}
